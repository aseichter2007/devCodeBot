// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Data;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200609184907_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Models.ActiveProject", b =>
                {
                    b.Property<int>("ActiveProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.HasKey("ActiveProjectId");

                    b.HasIndex("TimeId");

                    b.ToTable("ActiveProjects");
                });

            modelBuilder.Entity("Repository.Models.BadPhrase", b =>
                {
                    b.Property<int>("BadPhraseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Phrase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BadPhraseId");

                    b.ToTable("BadPhrases");
                });

            modelBuilder.Entity("Repository.Models.BadWord", b =>
                {
                    b.Property<int>("BadWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Word")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BadWordId");

                    b.ToTable("BadWords");
                });

            modelBuilder.Entity("Repository.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Repository.Models.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Repository.Models.NearConceptIdea", b =>
                {
                    b.Property<int>("NearConceptIdeaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProperForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NearConceptIdeaId");

                    b.ToTable("NearConceptIdeas");
                });

            modelBuilder.Entity("Repository.Models.NearConceptPhrase", b =>
                {
                    b.Property<int>("NearConceptPhraseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConceptID")
                        .HasColumnType("int");

                    b.Property<string>("Phrase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NearConceptPhraseId");

                    b.ToTable("NearConceptPhrases");
                });

            modelBuilder.Entity("Repository.Models.Platform", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlatformName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatformId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("Repository.Models.PreferredLanguage", b =>
                {
                    b.Property<int>("PreferredLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.HasKey("PreferredLanguageId");

                    b.ToTable("PreferredLanguages");
                });

            modelBuilder.Entity("Repository.Models.PreferredSearch", b =>
                {
                    b.Property<int>("PreferredSearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SearchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PreferredSearchId");

                    b.ToTable("PreferredSearches");
                });

            modelBuilder.Entity("Repository.Models.RawSearch", b =>
                {
                    b.Property<int>("RawSearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Search")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RawSearchId");

                    b.ToTable("RawSearches");
                });

            modelBuilder.Entity("Repository.Models.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Set")
                        .HasColumnType("bit");

                    b.Property<string>("SettingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SettingId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Repository.Models.TimeIndex", b =>
                {
                    b.Property<int>("TimeIndexID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("TimeIndexID");

                    b.ToTable("TimeIndices");
                });

            modelBuilder.Entity("Repository.Models.ActiveProject", b =>
                {
                    b.HasOne("Repository.Models.TimeIndex", "TimeIndex")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
